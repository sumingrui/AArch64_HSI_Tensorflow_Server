/**
 * This file is generated by jsonrpcstub, DO NOT CHANGE IT MANUALLY!
 */

#ifndef JSONRPC_CPP_STUB_ABSTRACTSTUBSERVER_H_
#define JSONRPC_CPP_STUB_ABSTRACTSTUBSERVER_H_

#include <jsonrpccpp/server.h>

class AbstractStubServer : public jsonrpc::AbstractServer<AbstractStubServer>
{
    public:
        AbstractStubServer(jsonrpc::AbstractServerConnector &conn, jsonrpc::serverVersion_t type = jsonrpc::JSONRPC_SERVER_V2) : jsonrpc::AbstractServer<AbstractStubServer>(conn, type)
        {
            this->bindAndAddMethod(jsonrpc::Procedure("sayHello", jsonrpc::PARAMS_BY_NAME, jsonrpc::JSON_STRING,  NULL), &AbstractStubServer::sayHelloI);
            this->bindAndAddMethod(jsonrpc::Procedure("dataTransfer", jsonrpc::PARAMS_BY_NAME, jsonrpc::JSON_INTEGER, "data",jsonrpc::JSON_STRING, NULL), &AbstractStubServer::dataTransferI);
            this->bindAndAddMethod(jsonrpc::Procedure("requestRatio", jsonrpc::PARAMS_BY_NAME, jsonrpc::JSON_REAL,  NULL), &AbstractStubServer::requestRatioI);
            this->bindAndAddMethod(jsonrpc::Procedure("requestResult", jsonrpc::PARAMS_BY_NAME, jsonrpc::JSON_STRING, "data",jsonrpc::JSON_STRING, NULL), &AbstractStubServer::requestResultI);
            this->bindAndAddMethod(jsonrpc::Procedure("stopListening", jsonrpc::PARAMS_BY_NAME, jsonrpc::JSON_INTEGER,  NULL), &AbstractStubServer::stopListeningI);
        }

        inline virtual void sayHelloI(const Json::Value &request, Json::Value &response)
        {
            (void)request;
            response = this->sayHello();
        }
        inline virtual void dataTransferI(const Json::Value &request, Json::Value &response)
        {
            response = this->dataTransfer(request["data"].asString());
        }
        inline virtual void requestRatioI(const Json::Value &request, Json::Value &response)
        {
            (void)request;
            response = this->requestRatio();
        }
        inline virtual void requestResultI(const Json::Value &request, Json::Value &response)
        {
            response = this->requestResult(request["data"].asString());
        }
        inline virtual void stopListeningI(const Json::Value &request, Json::Value &response)
        {
            (void)request;
            response = this->stopListening();
        }
        virtual std::string sayHello() = 0;
        virtual int dataTransfer(const std::string& data) = 0;
        virtual double requestRatio() = 0;
        virtual std::string requestResult(const std::string& data) = 0;
        virtual int stopListening() = 0;
};

#endif //JSONRPC_CPP_STUB_ABSTRACTSTUBSERVER_H_
